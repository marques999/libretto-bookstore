<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAACH/SURBVHhe7V0JeFTXdZbtOLFxlrqO4+AgjSTmvREikBBqx7GJcaiX2FnqxF/cpKZOmj1uttpJ
        W9tfQ5u4cds4jrPYBjQSiwGzGGOwDcYg5i0zkgAhJEAsQiAEWtAy897MaN9uz3m6gJYroWVm3ruj+3/f
        b4HfaJi57/zvnHPvueemCMQG2b6G92cURm/KVMLSTD04W9ZDCyQl9KishR6Dn15JM9bLmrFX1swSSTVq
        4ScZF1XjFPwskVVTgZ8rZTW0DN8b3vPBmUr4M26tORtekyH7aj88v5hMox9LQMAeeHxGukcJfRmM/ReS
        Hn4RDPZ1+LMORloJRls/yLgTQEt0qlkuqeZu4Cb4+wuyYj6WpZr3Zu1vmU4/toBA/CAHjEVgfL8HQyyV
        NPMMeIVmEEQbCKKPZbS2UjV64TNG4Wcj/KxCzwM/n/Kowdvp1xEQmBjmFxdf7fE3fUDa3fwxCGMWg5Ft
        BaNrAwPrBjH0DjNGLggitkRjdIN3CcmKsVRSg19wa5Eb5+6svy6FkCvp1xcQYGNWIOQCY/o8GNGvwYh2
        WIbENLbkIXjE8+BdNkta+KcgoEXwYLiZDoeAAHoLcjU+ScFYVgIPgDia4CenXmIyNHrAQ9aBSIowjHQH
        jHngVa6gwyQw1TC9uHYazjKBlzhsxeqa2TPcaKYmQSBd8NOEMGyvrITvx5CTDptAMiNzV+hDHiU4B27+
        r6ynJcM4BIcTwq99khr6sSe/yTOj4Oy1dDgFkgWyL/Jhj2r+EGLt14EmywgEL0/wtufhwZLrVo2HbtrZ
        dx0dXgFekbUrfINbD/8Mbm4JDaOYN15wHFSNPjq9XShr4cUzCvqER+EKkFjOLe27DjzGI/DEw7WKbuaN
        FpwkLaF0yzqu7EfucPmqroHBF0m9YwHCcPuaZ7gV82vgLXDdgnFTBeNFeBitdqvmvZjn0Tsi4CS4dRCG
        avrA9beybqBgvGktRDbCPdg0UzXvo7dFwG7ATckAroUnWAR+Oq/kY6pRNXrpRMgLc3TzenqbBBINHHy4
        Gd+FcCrhhYGCYyPcmwLJZ96Nlc70tgnEG1jKLSvmw5AgbhUJuPMJnr1T0s3VHj161/xlYsExrshSG6fD
        oOda04yMmyHoUOLUsGqekZXgv7m3972P3k6BmIGQKz3+1pthoPdjzRDzJgg6nuBNsIRlD65PiTqvWAAG
        MTMQ/YhVaaqZxsDBFuSXkJtUyVrkQavMXmDikPSWT4Br3gpeo5010IIcUzUaZC281FNopNPbLTAeuLXQ
        QhhA3L4qQqokJQ25SmUtNJfedoHLAWt7QBiPi9qpqUSjUg5EFy30kfdQMxBgwUrENePPII4W9kAKJjHr
        4d4/nrWr5gZqDgIDIfuasmRsLNDvdlkDKJjkhHvfCjawKdvX8lFqFgII3N4Jg3Mc58tZAyc4pdgDdvCq
        NRUsAGGVGrwdQqpDjIESnMKEB+ZWjz/soWYyNQHC+Lq1wsoYIEFB4FG3Yt5DzWVqwaMY34YBOD9kQAQF
        h/KwWzHmUbNJfuBUHniNH8AXF3vDBcfCPog0zrh9zbelLJkCze1QHBBfJn1DNsHYEkRSJynGV6kZJSdo
        WCU8h+BEeTZLiyyk5pRcwIQcvqDIOQQnTqujSnjfTJ/ppmaVHLCmcsVslWCMKGlGAMSSQc2Lb1iLgGKd
        QzDmNPZKSmQWNTM+geUj1go58wsKCk6OEJXsxuMbqLnxBWyjD25QEeUjgvEi9iSQdOO/uOvuiB8Y1P08
        fAmx0UkwroQIJYizoylLlvCzRkL3c4iSdcHEUDVCbr/5CDU/ZwN3AoI4xGYnwcRSNWpm6dHZ1AwdCEKu
        wD3k/dtkGV9AUDCe7G8ttAWbfFCLdBas7iP9DRbEHnJBe6gabZJiPp19hLyXmqVDQMiV/a15RPcRQXuJ
        dX5uJfQlapnOQP9ectG3StAZlDSjKc0pjbOtdqBWx0P2hxUUtIMezXzDXdT8QWqm9sBqJK2ZuSLvEHQa
        IdRqgQf3dxb6fPa1EqJd1kUjaUFHEkRSNisQclFzTSzwfA4QhzjqTNDhDC2BSCfxxy6A+/ou1sKwP5Sg
        oGPYIfnDD1CzTQxAHBmSONlJkBNCqHXC5WtIXDM6EMha1gcRFHQirapf1XySmm8cgUctW6fJGhHWBxEU
        dCrBZg+7tUg2teT4AM8hByXiUctij4cgV+zPl43funzkGmrOMQZ6D8X8GohDnEMuyCsb3PnmTGrRscXc
        0r7rIDEX07qCXFNSgi+lbCRXUbOOHTyq+QjrH0xm3lEUIXftjZAvH4iSr5T089FDLeT7Ry7xO4dbyFcP
        Xrq+EF6PvzcvEGa+p6D99KjB+6hZxwbYih6SnKRt2/NJMGY07l8cbyN/qW4nbzV2ES3UTcoiPaQ82kOq
        2npJdXs/Gzv7iNl9icGuPnKWXkMegdfj7+0zu8nu5i6SV9NBnq5oI4vLWsithUI0TiDk0f5sX8P7qXlP
        HhBaPZ1s9Vaf3x8l/32q3RJCQ2cviYCxt/X2EbB30ktiA3grAm9L2uF9W3r6iAF/KW/pIS9Wd1iCnKWz
        P5tgfInlUZJu3k3Ne3KQfZEPw5uWDP1HeOJcf5h8bl+EfBPCo9yaTnKytaffgm1GM6hxB3irx4+1ks8X
        RywPkyVEkwAavbJqPufyVU1+Rgtyjx/yuMccn873F0fJbyrbyBsNXVaYBA9xx+I8eDE/eLOlZzvIw5DT
        ZAuhxJVg06fh4Z9FzXxiyNwV+hAo7XXWP+Bk3r0/Qjaf7yRnQBQYNvEEFPH5jl5SCDnMz8CzzPGzv6Pg
        JIl72HXjiUmVw3uU4BwQCBfd2GfDE/fvIK5/p6mLgH3FLI+wCyhrzIdKw93ke0darFkxj/VdjWHfXXBi
        hGS91r19Epuq4E1+NfRNnUacgXqkrIW8UttJwpgRJylKQChPHI2ST79bTeTdDcyxEBw/IWH/HjX38WF6
        ce00iNPqWG/qBOLT9GsQq2+HJLcJH7VTAK3dvSRQZ5LH9NNEequKOS6C42X45ISSdUkJPcp+Q2fwPyra
        SCMktpylGJMGft1oVw9543QTmf/2SYilQ8zxERwbJdXokpTg+PaL4A4srH5kvaGdxJmpeyEBV0PdlqFM
        dVQYreQb/nMk29fMHC/BMRALb9XwunGVn0hq8AtOm9rF9YGnTrRZM1NCHJfQ3N5Flp1oJgt8dTBOIoGf
        EFWjPEtrlKn5Xx7wSyuBjlk5/4Q/DEl4R1In4ZNBb18f2d8YJfcr54isiJBr3FTNNkkxvkLNf3RgFwj4
        pQPD3sQmfrYoQrY3dVklGwIjA4entClKFu08JfKSCVBSzedxYorKYGTAiz8vaUbT0DewgyiOnSCOqZaI
        TwbHgi3kW74K4nm3FkMH5rgKDicIpCxjd/QmKgM25hcXXw3i+DX8Qu/QN0g07wRxqMFuIY4JINTRRZ4q
        PE3kbZXCm4yVqtHj1kJfTEkhV1A5DIfH3/QBSTV2MN8ggbxzb4QcDPdwvxpuJ85F2smDb5aSjA1lkJcE
        meMsOJjgHF4e9aQqaXfzx0AgIdYvJ4qfCoStfRTCcUweBxsjZMH6vST9lb1E2lVvhVzzC8LkjqKwtREM
        K5wfLImSnx9rtXjP/v7/h8SH1O3wutsKw+RT8Dtz/GGSxbhfyURcGB910VDWQotZv5goYgXrC2faSYeI
        q2IGrSZEPvlKgLhWFpKZ206Rx45ErQ1el6tsjsIL8HXHWnrIHgh1X63rJL+vaif/fqJ/8xfunGTdQ97p
        1s17qByGA54wtu45/6dDLdbGJYHY4rWKeuLO1YgrVyeeDQfJmnOt9Mr4gZu/6jsuCKeL/GdlG3mgOMq8
        n1xSMZZSOQwHvKBt2C8kiFitWgtPLIHYo6Wrh/zMd5Sk5SgW79lSQmrbuunViQMfZZ1wy1rB2xyK9JB/
        gTDt47yX56tGJZXDYMgBYxHEYLb02sVB3XK+UyTlcYQKodb8tQWWQGbmqmTpoXOkKw6hbD0oZvm5DqvR
        BZeNK1SjYZYeHH4YqKSav7e2IrJ+Kc7EBBEbIAjEDyiG/957imSCOFAkn3m1iBwNRunV2AOrHnBvDt5b
        rIRg3XcnEpxEC+biVBaXIKtmKesX4k2cVXlXzFolBI2tneSWtYUXQ61fasetMpV4Ad8ZhVIS7rHaI3HR
        pAJ3GmrGs1QW/fD4jHRQji1tfXAXIM6YCCQGOYfPXRSIy6uQ+pYOeiW+wHuM3Vw+U3hhZ6RzKWnhNbgm
        SOWBW2tDXwbV2HJS1MqaxNwggX6YHV3ktlcveZEn/RX0SmJQ0dJDnjjeaq13sezBISxEp0HlgfmH8Qtw
        LQmfwcJFKOwVJZBY/M++UxcFcsu6QlIdaaNXEgPsEbaurpPcCuE1yy5sp2rWSD7jk1QeIBA9/CIk6Anv
        2I6LTgKJR/H5sDWThQKRV2jk9ZPn6ZXEAZ+LhUa3Q7tNGr2SGrrTEge2YJTVUMJb++AGqAAMkEDigXVa
        97y23xJIulclvy6qjGuyPhqOQ8iF5S5Oa5gn6eYPUgi5KiWjMHoThFg660XxJNYCiQ1Q9gD3tH/33SMX
        w6x/2F5Gmto66dXE43Rrr9X10kkikbTQH9zbK96XkqmEJVw9ZL0onvzJ0VbSJmavbAGOOq6JZNAw6283
        7SMVoYmXn0wW+HkqWnusIkmWrdhBSTPz5xeTaSkz9eBsiLkSfiDnH8+0ky6xdG4bvIfPEc8K3RLI/DUF
        VuWvnUCRnIBwC6eBWfZiAw9ZHeBlPbSAcTHuXF/f6eheucmO3dVB8olXAhfDrPzqZnrFXrzd2OWYxN2t
        1d1oW/8rPHZAwD4U1ZvkU+A5LghkVXkt6XHANgPc6vBMZbsjmndL/shncQ/IY6yL8aYQiL2oNFrJp9dd
        WjB8uews6XaAQBCVkI9g/zOW3SSSWbgFFzyIl3Ux3hQCsRenzVZym0MFglha3Wa7F7FqsuA/61kX400h
        EHvhdIG0dPeQhwJ11jZhlv0khsbLEGIZe9kX40shEHuh14TIvAFJutMEgtiLK/5bjtsnEtXck+LK1Ww5
        Xm1LQ6do6WMjdlc3D5rFWupAgXT29JL73ighM988bYtI0l7c6U/JfP1YLetivPnn6nbrgBgBe/Dq8TqS
        vbJ/HQS57VSD4x5YWP7yp4PVJM2rgiepSHhb1YyNh6pwHzrzYryJB1eKlXT7YK2kg+GhOKQ8jQRqDXrF
        WfDXhkgWLmjCZ83ceJjIvsT2+LJNIHgMs6jFsgftELr8c375Re+ByfqhJntX0kcClsAs3Li3/7OiSF4r
        T2gjPNsEgsTNMwKJx/nWTvJliO0vCORLbxwg1ZF2etVZaG7rJA+/VXrxsyIzXjtCpAR5ElsF8uwpZ96U
        ZEdpY4TMXuW3jM0F/KnvKGnrdmZhHH6ugZXHF0WyvpRI+Y1Mu4olbRXILQVhcPcizEo0/lgCiS81NDfk
        HyvLa+gVZ+JnvmODxHGB6esOxF0ktgoEiYdwCiQWf0s3SyE/Dp7EqfnHBYwkEGT62mIIt+J3BJ3tAll8
        qMVqZymQGLx5qnGQgT24tYRecS5GEwjSEkmcPIntAsG+WPlB4UUSgbqWjkszQpS+c0F61bm4nECQ2MHe
        vbMGbCq2C4q2CwR7JD15oo1ExZRv3PFccdXFzorIR7aXkY4eZ+9a6+nrI/+cf6mv8Gh0rSokkiUStq1N
        hLYLBDnXHyZFhjjaOZ6oCLWQRZv2XTQm7GpSWGc4fszxtCzcMz9QCKPRtbKg/ywUhp1NhI4QCPJrB6NW
        W32B2KO9u5c87a+wOphYRuRVyL8ox0i40/kFo1XhNnLv5kuTCmOha4WfuLdXx6R+yzECQX7/SIvVTl8g
        tni3uvniugcS96AX1ZlceOzihjCZu/pSUeVYiSLBA4MmKxI8NOcU64IdnK2bJOecaEUaS5wOt5JbBzSs
        Rv6rdsKK7Z0O/IRbTp63FjMHfv6xEg8Mcm8/y7S1MfIoehBbyt1HIvbLKjK7xVkhMUBNtJ089ObBQUbz
        OchDQu18zBpi+T1rFX08dHk14n77zIQ8iUc1/XjsgcK6aCex0x62pRSYOBpaOy3julCxi7xvczEpc/ii
        4ECUN0cvtiaaDF25Gsl8/TiRxlvkqJtvogdZOeyCA7igKEwKhEgmBHzyPq4ct84lvGAkmHfggZ4cRFYX
        8eM9Y5veHRNRJOPcnYiHSoEHCS1jXXQC8SjiskiPmP4dB3Bd45eQY1yYsUJ6VmiO3DE4GkogOY+F9xhE
        LJffWjF2kajGM+BB7Gn7M1Y+dLA/3BI5yehA0z9ttpGfwFN3YFiVvcpP/nDgTFzOI4wXcO1j8Y5D1nT0
        IAOPEXFPibSniWlvA2m1/ZE140HWRSdx0b4IWXa2Q0wBjwIsOHxwW8kgceD56Jsq6rnyHDi7lnekhswa
        sB045oQxythQdtkiR48SnJMyUwl/hnXRacTV9l9Xtolz1BnYVd1sHco58ImLBrb+eD1XngNRG+0gC9YX
        DTboeJCKZLRwa45uXp/i1pqzJdWwpXHDeImNxLAr/MnWHusAlqkM/Pp4ZMH/7T9tHYIz8ObPWxMgeYdr
        uPIcCDyWYfGOsZeVxIIZ6w+OVAlc0t+8WjUyZNUsZ7zAscTk/S/VHaR2ipamdPX2kh1VTVax4cDiQ/zz
        P4KBObUBw2g4G2knP1cuX7UbD6av2TesfkvSzK0zCvquTZF9tR+WVHP3wIs88ON+k/x9aZTkN3dNqS7x
        uDbw/V1HrPxi4E3GziTPFFWS2pYO7mb9cM3me/CdBuZPiWb6mv2DPIlbMX6TvfHIe1PwkBAQyKaBxscL
        sVQehfLooRar4TFnEcWYgf2hsIkadj+ct6aApA/INTDvwAZwmG/wFlIhsMPKfwRODpqWtovpq4suiUQ1
        vpOykVxlnVMIOcgL8D96hxogT8SNVy+caSenQCjJohMUxkmj1RIGJuFDbygeX4ALgok+pTZWwLDqPwsr
        h30vO+laESDud2o6ZS14hyUOhKyYj0HMFWUZHm/ETim8e5JWSFbfgRwDiwqxdmpo6IHh1I92l1v7ObCU
        nTfg/VHOBa3tvhMtRIwn01cVVWVsODaHyiMlJUs17wUP0sgyON74m0p+BdICwlh7rI58ccsBq5nC0LAD
        //4Pb5eRvfUmF3s5RsLGE/VW6Uu8FgInTa9a6FpRmE7lAQLZ3zIdPEgVy+B4Iy8CwXwhAkaO+8SxkTSu
        gGMLnqFGg39HseDTdvvpJsdvkR0J+H0xFPzhrvJBOZQTmbpceSV7o+/9VB796K/qNfpYRscTnSqQtu4e
        K+bGsOi1ivPkt3tPkW+9c9h6krJu0gWiaJ7yV3DtMVAYfz5Y3b+YyfiOjuJypSfNqyyhsrgE8CBP8Z6o
        I2MlENxLcTQYteqCxoszYBBYbLe1spE8X1xFntQrLA9wz+b91rFnVjNm1s0ZgThL9Q0IrTAv4WmmCr0j
        NorALbModNZ3cyCjqbn6w1QWl+BRg7dLmtHNMjqeGAuBXGiPk7VSJ9mrdCvEQX5r5+ERif1jL7wOyzxQ
        BJhMY3OEWMzv45MX3/cfdxwih5sijp+pw3zqsfzyQQuZPDA1R2lIXanPprIYDEk1Qiyj44mTFcj51g5r
        hdqxCSQlNpx+5WidNQ08ES8Xb2DZyLfhwcH67E4mCKScymE4ZMVYyjI6njgZgeBTD7t98PLUw1ktDNmw
        Lc6zkNNgCIYCd4J3iXZ18ymQPP1/qRyGQ1KDX2AZHU+cjEBw0Q1DItbAOZ0YxmH3j9vXF1neBScB9pwN
        EsMm78KtQFbpC6gchsOtRW6UVPM8y/B44UQEgiXhWBXLqzhYxKlUFA16Q8xd0Mv8KnASPM1pq1MIepvR
        +MKBM5bIVhypmdBiJI8CgbD63MXyEhbm7qy/TlbNzSzD44XjFQiKY2V5rZVcswZtqhNn0FYfrSWdveMT
        CZcCyQ38KYWQK6gcGCDkSkkL/1TWjB6W8fHA8QoEn5ZY08QaMMF+Yuj21ulGOmJjA4dJeueMvMAtVAkj
        Q1aNRZJm1rGMjweORyCnzFbyN2uFOMZCnPLOh5xmrODPg6glmasDH6EyGBkef9PNIJIilvHxwLEIBC8f
        D7WQ2xkVsoIj89Z1heRYMDqmBxBnHqTPlaP9bsaGgmupDEYH9gMCdrEM0Okci0Bw7eAr20qGFQMKjk5c
        rPzqtoNWQ+nLgTOBhF15ygPU/C8Pd8CYB8ZmDjU+Hng5gWCx34/ysWBOiGMixJmxr79detn2pTwJJDVH
        OfCx5b4Z1PzHAMjkZcXYyzJAp3M0gWAdEy4EOr2a1OlET4LbfnGX40jgRiDLfX0ur7oKrH6U2SsGZCV8
        P8sAnc6RBGJ0dJPnD5yJSV2UYP86C545MlKVMS8CSc3xdblW6HdRsx875hcXXy1p4X0sI3QyWQLBLiAv
        llaPu4pWcHTieL5Udpa5R4UbD+JV9RSf7z3U7McHSQ39mGWETiZLIPlnm8mc1WIhMB7E/rk7zzQNq//i
        RSCuXO0b1NzHD09+k0dSDa5KTwYKBDuZVxitienUN4WJpSxDO8fzIBDIpSqnL9s2jZr7+DGj4Oy1kmbm
        yio/Ow0HCkSHm/bZDYOPPRaMD3HBtaDOuDj2HAikJzVP/yZWj1BznxjcqvGQpBnNLGN0Ii8I5Eiojdz/
        xkHH7+tIFuI4485BXGPiQiBepSwtV8+kZj5x3LSz7zrwIIW87FdHgWCD658X15P0PJF3JJI4/ftPIAoU
        h7MF4utN8+rPzF9WfDU188lB1sKLedmO+8sTbWTJyTbi3nGOuIRAbCGK5Ey4zckepDHdG7iTmvfkgU18
        Zd15Zxmy+OnCsPUTz37I2AQ3SKx72MJvvnPI2rjFumY7vepm9x+3v4+ad2wga5E7hhqj46kEycxtzmpt
        OVWIpTxO3LoMYWBbxrrCudSsYweXr+oaSTVW89g7K3PrSesQR9aACU4hLvf1pXm150bfFDVhkCvcvLYo
        VQ3wJKcgJxl8ZIDglOPxm/P2pVKDjj0yd4U+ZB2VwGODORCJ++1qq3s3Y+AEk5ypOUoHeI+fxGzmaiTM
        VM37ZJXPUniktLtBiGRqsjRjlSZTM44vwNBeGGp4PNH9To11WApjEAWTkFixm5qr/5yab/yBp39KmlnA
        Mj5eKO06T9LXOXQaUjCmTM1Rd2cuK/4QNd/EQPKZd0uq0ckyPl5orZVsSOypqoIJZ/sMb+Dj1GwTBzwi
        V9LN1ZD8cn1kgqQE+0UiFhSTj8uVHldu4ImUjRtHbgYXT3j06F2Sap5hGR5PlPY0kczXyonLK9ZKkoe+
        PheEVmlL1enUXBMPnDKTleC/QajFZQeUQVRC/WslQiTJweVKMDVP/1LKkiWTK2efLNzb+94HBrZnmMHx
        SFxQfPM0ceWKrbnc06ttWDjRrbSxRtau8A3JcsahrIFItlYQ1wpRCcwrXV614gav/wPUPB0AbBOkRR6E
        J3AD2+g4I666Y7n8arEbkT+qx2esLLiVWqZzYHWG18JLkyIfoZR21YNIxIIiR4yk5uqPpixxSGg1FJ5C
        Ix0Mq3SoofHMfpEIT8IBe1252pq0l/TrqTk6E7IWmgtxfCXL2HgliiR9XYlYK3EyverBGasL3NQMnQ05
        EF0EhlU/1NB4Jq66Z752VIjEkVTPuLyBedT8nI+FPvIe8CKPQz7SyjI2bunDVfdDQiSOoq/R5fV/Dvcr
        UfPjA1m7am6Qce+IZnJ7WhWTaohkir3ujmDqcqU9LU/9hXt7RWz3lycK2b6Wj8qq8SrT0HgmLihuPUlc
        K8W+ElvpVV9KeJVurGEtIqrGVqahcU0QyVtVorWQTUz1qptm5BT8NTUzvuHxhz1gVEeHGxnvxG28Z0Rp
        SiKJjRdytT2uFQf/ippXcsCtmPeAUR0Gcl0ez6J7Zw1xrSpk31DB2HG50pOWq+7IXKWnUbNKLrgVY56k
        8V8ez6L0bj3JWCt2KMaVXm1vWiz66ToZbl/zbTwfMz0arW28q0RpSpxYfbPX76FmlMRYQq6UFOOrYFBn
        Zc53IzKJOxRxr7uYBo4NMazyKmWuFYEsakFTA1laZCGPR7yNiSCSzI2HRTfHydJKyNUdSR9WjYSZPtMt
        aUaAaWS80wci2SxKUybFXG1P0ibkYwWEWRmyxueR05elavSLhHXzBUclrnMk3VTuRCEpkVmSau7m5QyS
        8XLmW6eJK0+slYyFVvmIV30paRYBYwW3FrlR0o3/klQjyDIyromlKbjqvrKAaRSCF+hrxNoq7stH4gU8
        qMejGN8GgwoxDY1n4jbed2pEacqIxJJ1/+e4LTxMGJYsudLtNx8Bg6oBJt00MC4oir7Ag9gLIdXB/v0c
        nJWs24lZenQ25CVbQCRtLEPjmdaC4pp9LGOZaozgNlludgI6DZmB6EckxXwa8pKkC7nwGIaM9aUso5ki
        VI9jgwXH7yF3OrKPkPe6ldCXJM1oYhka11RCJP3VgwzjSW5i3yqrNY9Tu4/wiDTdvN6jmW+AN2lhGhuv
        BJFkbDoyBRYUfX3YDjTNq+c5q6lbEsFd1PxByEm+AyIpYxobp7QaQmw+mrz7SrDLeo66G3vlOqYdaLIC
        B3hWIOSStdASMK6OocbGLcGTWGcoJl/z7HY8gsDqsm53I+mphPnF5GrJH34AvMmJZFqBd+OCYhJ4EuvY
        M/Aa1uE1dp3PIYDntzd8VFLNJ0Eoh5NFKJZIOG0IYZ0mm6OU4pmAYkXcQXBrkWxZM34LBpYEDbRx1f0c
        SV9bzDRCRxJL03OU43jUcsJOkxUYH1w+co0735wpKcGX2IbHF6X8RpL+ivMXFF05ShsI4zk8pD/u55AL
        xAAbyVUeNXgfhF5+CLua4YncyzJAHmj1BXbkqruvF/KMhjSvujljXeFcPAKDjr4AL6AHjd4tq+Zzkmae
        5rW2Cz2Jg07jtbbAgjCeca3Qb3P/cbsoLuQdLl/VNbIvkiXpxhPgVWpZRuh0Sr4gmbnlhK0LihBKVabm
        6d9My9UzRSiVhMA1FPf25g9C2PU9WQuflPCwH568ihLq3+ueKJFA4o3TtfDv6a5c7RvTl22bBqGUWMuY
        CkCvAsn8A7IaXgciKYcwjI+qYVx1f/1YPNdKcDYqnJqjHHB51VUQRt2VIla/pzAgoc/SGmVJMb4C4dfz
        wDIQjLM70uPmK1wrWRHTtZLOtBy1xJWj/c6VpzzwseW+GTA6IvEWuITpxbXTMnZHb3JroS9CGPaysxvc
        4UGjZyctEpdXOefKDfxpRl7glszVgY/M2FBwLR0OAYGRQK7AuiEMw9y6eY+sGEvhqV0JbADRtMBPx+Qt
        VkOIsYgEG7DlKFEInRqA5ZBs/2/qKn0BelAxRSsQE8zSg7NlLbQYvMuzkhZeAwZaCLlLjd3rLNK7dSR9
        7f5BguhPrpVqSLALU5crr8Cfl6Tm6g+nrtRn068jIBA/ePxNH/D4jHTJZ3xSUkN3Srr5A0kL/QE8TD4Y
        7aGhRhxvSu/Wl6S/WrLDlev/nSvH96PUZb4FGTnaXNeKwvTsjb73048tIGATCLkKO3LMLybTcIHSrdXd
        KPkjn83qz2eeBS/zMnibPR5rdd+sYhn5ZXgUf1fWzTcl1fw9hHnP4Ht7lOCcObp5Pf6b07cVT8veeOS9
        VtgkEAOkpPw/q0eZKs/LhcsAAAAASUVORK5CYII=
</value>
  </data>
</root>