//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibrettoWCF.BookstoreService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginTemplate", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class LoginTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clerk", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class Clerk : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibrettoWCF.BookstoreService.Permissions PermissionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibrettoWCF.BookstoreService.Permissions Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((this.PermissionsField.Equals(value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Permissions", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    public enum Permissions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Clerk = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Administrator = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    public enum Response : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseError = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BadRequest = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermissionDenied = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidArguments = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SessionExists = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Purchase", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class Purchase : LibrettoWCF.BookstoreService.Transaction {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(LibrettoWCF.BookstoreService.Order))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(LibrettoWCF.BookstoreService.Purchase))]
    public partial class Transaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookTitle {
            get {
                return this.BookTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.BookTitleField, value) != true)) {
                    this.BookTitleField = value;
                    this.RaisePropertyChanged("BookTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class Order : LibrettoWCF.BookstoreService.Transaction {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibrettoWCF.BookstoreService.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusTimestampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibrettoWCF.BookstoreService.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatusTimestamp {
            get {
                return this.StatusTimestampField;
            }
            set {
                if ((this.StatusTimestampField.Equals(value) != true)) {
                    this.StatusTimestampField = value;
                    this.RaisePropertyChanged("StatusTimestamp");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    public enum Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingExpedition = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingDispatch = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispatchComplete = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderCancelled = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderTemplate", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class OrderTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bookTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double totalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bookId {
            get {
                return this.bookIdField;
            }
            set {
                if ((object.ReferenceEquals(this.bookIdField, value) != true)) {
                    this.bookIdField = value;
                    this.RaisePropertyChanged("bookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bookTitle {
            get {
                return this.bookTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.bookTitleField, value) != true)) {
                    this.bookTitleField = value;
                    this.RaisePropertyChanged("bookTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerId {
            get {
                return this.customerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.customerIdField, value) != true)) {
                    this.customerIdField = value;
                    this.RaisePropertyChanged("customerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerName {
            get {
                return this.customerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.customerNameField, value) != true)) {
                    this.customerNameField = value;
                    this.RaisePropertyChanged("customerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double total {
            get {
                return this.totalField;
            }
            set {
                if ((this.totalField.Equals(value) != true)) {
                    this.totalField = value;
                    this.RaisePropertyChanged("total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookstoreService.IStoreService")]
    public interface IStoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/Login", ReplyAction="http://tempuri.org/IStoreService/LoginResponse")]
        LibrettoWCF.BookstoreService.Clerk Login(LibrettoWCF.BookstoreService.LoginTemplate loginForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/Login", ReplyAction="http://tempuri.org/IStoreService/LoginResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Clerk> LoginAsync(LibrettoWCF.BookstoreService.LoginTemplate loginForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetBooksList", ReplyAction="http://tempuri.org/IStoreService/GetBooksListResponse")]
        LibrettoWCF.BookstoreService.Book[] GetBooksList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetBooksList", ReplyAction="http://tempuri.org/IStoreService/GetBooksListResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Book[]> GetBooksListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetBookById", ReplyAction="http://tempuri.org/IStoreService/GetBookByIdResponse")]
        LibrettoWCF.BookstoreService.Book GetBookById(string bookIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetBookById", ReplyAction="http://tempuri.org/IStoreService/GetBookByIdResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Book> GetBookByIdAsync(string bookIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddBook", ReplyAction="http://tempuri.org/IStoreService/AddBookResponse")]
        LibrettoWCF.BookstoreService.Response AddBook(LibrettoWCF.BookstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddBook", ReplyAction="http://tempuri.org/IStoreService/AddBookResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> AddBookAsync(LibrettoWCF.BookstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteBook", ReplyAction="http://tempuri.org/IStoreService/DeleteBookResponse")]
        LibrettoWCF.BookstoreService.Response DeleteBook(LibrettoWCF.BookstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteBook", ReplyAction="http://tempuri.org/IStoreService/DeleteBookResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> DeleteBookAsync(LibrettoWCF.BookstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateBook", ReplyAction="http://tempuri.org/IStoreService/UpdateBookResponse")]
        LibrettoWCF.BookstoreService.Response UpdateBook(LibrettoWCF.BookstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateBook", ReplyAction="http://tempuri.org/IStoreService/UpdateBookResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> UpdateBookAsync(LibrettoWCF.BookstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetCustomersList", ReplyAction="http://tempuri.org/IStoreService/GetCustomersListResponse")]
        LibrettoWCF.BookstoreService.Customer[] GetCustomersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetCustomersList", ReplyAction="http://tempuri.org/IStoreService/GetCustomersListResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Customer[]> GetCustomersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetCustomerById", ReplyAction="http://tempuri.org/IStoreService/GetCustomerByIdResponse")]
        LibrettoWCF.BookstoreService.Customer GetCustomerById(string customerIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetCustomerById", ReplyAction="http://tempuri.org/IStoreService/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Customer> GetCustomerByIdAsync(string customerIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddCustomer", ReplyAction="http://tempuri.org/IStoreService/AddCustomerResponse")]
        LibrettoWCF.BookstoreService.Response AddCustomer(LibrettoWCF.BookstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddCustomer", ReplyAction="http://tempuri.org/IStoreService/AddCustomerResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> AddCustomerAsync(LibrettoWCF.BookstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteCustomer", ReplyAction="http://tempuri.org/IStoreService/DeleteCustomerResponse")]
        LibrettoWCF.BookstoreService.Response DeleteCustomer(LibrettoWCF.BookstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteCustomer", ReplyAction="http://tempuri.org/IStoreService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> DeleteCustomerAsync(LibrettoWCF.BookstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateCustomer", ReplyAction="http://tempuri.org/IStoreService/UpdateCustomerResponse")]
        LibrettoWCF.BookstoreService.Response UpdateCustomer(LibrettoWCF.BookstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateCustomer", ReplyAction="http://tempuri.org/IStoreService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> UpdateCustomerAsync(LibrettoWCF.BookstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetPurchasesList", ReplyAction="http://tempuri.org/IStoreService/GetPurchasesListResponse")]
        LibrettoWCF.BookstoreService.Purchase[] GetPurchasesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetPurchasesList", ReplyAction="http://tempuri.org/IStoreService/GetPurchasesListResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Purchase[]> GetPurchasesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetPurchaseById", ReplyAction="http://tempuri.org/IStoreService/GetPurchaseByIdResponse")]
        LibrettoWCF.BookstoreService.Purchase GetPurchaseById(string purchaseIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetPurchaseById", ReplyAction="http://tempuri.org/IStoreService/GetPurchaseByIdResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Purchase> GetPurchaseByIdAsync(string purchaseIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddPurchase", ReplyAction="http://tempuri.org/IStoreService/AddPurchaseResponse")]
        LibrettoWCF.BookstoreService.Response AddPurchase(LibrettoWCF.BookstoreService.OrderTemplate purchaseForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddPurchase", ReplyAction="http://tempuri.org/IStoreService/AddPurchaseResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> AddPurchaseAsync(LibrettoWCF.BookstoreService.OrderTemplate purchaseForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeletePurchase", ReplyAction="http://tempuri.org/IStoreService/DeletePurchaseResponse")]
        LibrettoWCF.BookstoreService.Response DeletePurchase(LibrettoWCF.BookstoreService.Purchase purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeletePurchase", ReplyAction="http://tempuri.org/IStoreService/DeletePurchaseResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> DeletePurchaseAsync(LibrettoWCF.BookstoreService.Purchase purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdatePurchase", ReplyAction="http://tempuri.org/IStoreService/UpdatePurchaseResponse")]
        LibrettoWCF.BookstoreService.Response UpdatePurchase(LibrettoWCF.BookstoreService.Purchase purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdatePurchase", ReplyAction="http://tempuri.org/IStoreService/UpdatePurchaseResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> UpdatePurchaseAsync(LibrettoWCF.BookstoreService.Purchase purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrdersList", ReplyAction="http://tempuri.org/IStoreService/GetOrdersListResponse")]
        LibrettoWCF.BookstoreService.Order[] GetOrdersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrdersList", ReplyAction="http://tempuri.org/IStoreService/GetOrdersListResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Order[]> GetOrdersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrderById", ReplyAction="http://tempuri.org/IStoreService/GetOrderByIdResponse")]
        LibrettoWCF.BookstoreService.Order GetOrderById(string orderIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrderById", ReplyAction="http://tempuri.org/IStoreService/GetOrderByIdResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Order> GetOrderByIdAsync(string orderIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrdersByUser", ReplyAction="http://tempuri.org/IStoreService/GetOrdersByUserResponse")]
        LibrettoWCF.BookstoreService.Order[] GetOrdersByUser(string customerIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrdersByUser", ReplyAction="http://tempuri.org/IStoreService/GetOrdersByUserResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Order[]> GetOrdersByUserAsync(string customerIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddOrder", ReplyAction="http://tempuri.org/IStoreService/AddOrderResponse")]
        LibrettoWCF.BookstoreService.Response AddOrder(LibrettoWCF.BookstoreService.OrderTemplate orderForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddOrder", ReplyAction="http://tempuri.org/IStoreService/AddOrderResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> AddOrderAsync(LibrettoWCF.BookstoreService.OrderTemplate orderForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteOrder", ReplyAction="http://tempuri.org/IStoreService/DeleteOrderResponse")]
        LibrettoWCF.BookstoreService.Response DeleteOrder(LibrettoWCF.BookstoreService.Order orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteOrder", ReplyAction="http://tempuri.org/IStoreService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> DeleteOrderAsync(LibrettoWCF.BookstoreService.Order orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateOrder", ReplyAction="http://tempuri.org/IStoreService/UpdateOrderResponse")]
        LibrettoWCF.BookstoreService.Response UpdateOrder(LibrettoWCF.BookstoreService.Order orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateOrder", ReplyAction="http://tempuri.org/IStoreService/UpdateOrderResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> UpdateOrderAsync(LibrettoWCF.BookstoreService.Order orderInformation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStoreServiceChannel : LibrettoWCF.BookstoreService.IStoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StoreServiceClient : System.ServiceModel.ClientBase<LibrettoWCF.BookstoreService.IStoreService>, LibrettoWCF.BookstoreService.IStoreService {
        
        public StoreServiceClient() {
        }
        
        public StoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LibrettoWCF.BookstoreService.Clerk Login(LibrettoWCF.BookstoreService.LoginTemplate loginForm) {
            return base.Channel.Login(loginForm);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Clerk> LoginAsync(LibrettoWCF.BookstoreService.LoginTemplate loginForm) {
            return base.Channel.LoginAsync(loginForm);
        }
        
        public LibrettoWCF.BookstoreService.Book[] GetBooksList() {
            return base.Channel.GetBooksList();
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Book[]> GetBooksListAsync() {
            return base.Channel.GetBooksListAsync();
        }
        
        public LibrettoWCF.BookstoreService.Book GetBookById(string bookIdentifier) {
            return base.Channel.GetBookById(bookIdentifier);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Book> GetBookByIdAsync(string bookIdentifier) {
            return base.Channel.GetBookByIdAsync(bookIdentifier);
        }
        
        public LibrettoWCF.BookstoreService.Response AddBook(LibrettoWCF.BookstoreService.Book bookInformation) {
            return base.Channel.AddBook(bookInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> AddBookAsync(LibrettoWCF.BookstoreService.Book bookInformation) {
            return base.Channel.AddBookAsync(bookInformation);
        }
        
        public LibrettoWCF.BookstoreService.Response DeleteBook(LibrettoWCF.BookstoreService.Book bookInformation) {
            return base.Channel.DeleteBook(bookInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> DeleteBookAsync(LibrettoWCF.BookstoreService.Book bookInformation) {
            return base.Channel.DeleteBookAsync(bookInformation);
        }
        
        public LibrettoWCF.BookstoreService.Response UpdateBook(LibrettoWCF.BookstoreService.Book bookInformation) {
            return base.Channel.UpdateBook(bookInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> UpdateBookAsync(LibrettoWCF.BookstoreService.Book bookInformation) {
            return base.Channel.UpdateBookAsync(bookInformation);
        }
        
        public LibrettoWCF.BookstoreService.Customer[] GetCustomersList() {
            return base.Channel.GetCustomersList();
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Customer[]> GetCustomersListAsync() {
            return base.Channel.GetCustomersListAsync();
        }
        
        public LibrettoWCF.BookstoreService.Customer GetCustomerById(string customerIdentifier) {
            return base.Channel.GetCustomerById(customerIdentifier);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Customer> GetCustomerByIdAsync(string customerIdentifier) {
            return base.Channel.GetCustomerByIdAsync(customerIdentifier);
        }
        
        public LibrettoWCF.BookstoreService.Response AddCustomer(LibrettoWCF.BookstoreService.Customer customerInformation) {
            return base.Channel.AddCustomer(customerInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> AddCustomerAsync(LibrettoWCF.BookstoreService.Customer customerInformation) {
            return base.Channel.AddCustomerAsync(customerInformation);
        }
        
        public LibrettoWCF.BookstoreService.Response DeleteCustomer(LibrettoWCF.BookstoreService.Customer customerInformation) {
            return base.Channel.DeleteCustomer(customerInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> DeleteCustomerAsync(LibrettoWCF.BookstoreService.Customer customerInformation) {
            return base.Channel.DeleteCustomerAsync(customerInformation);
        }
        
        public LibrettoWCF.BookstoreService.Response UpdateCustomer(LibrettoWCF.BookstoreService.Customer customerInformation) {
            return base.Channel.UpdateCustomer(customerInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> UpdateCustomerAsync(LibrettoWCF.BookstoreService.Customer customerInformation) {
            return base.Channel.UpdateCustomerAsync(customerInformation);
        }
        
        public LibrettoWCF.BookstoreService.Purchase[] GetPurchasesList() {
            return base.Channel.GetPurchasesList();
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Purchase[]> GetPurchasesListAsync() {
            return base.Channel.GetPurchasesListAsync();
        }
        
        public LibrettoWCF.BookstoreService.Purchase GetPurchaseById(string purchaseIdentifier) {
            return base.Channel.GetPurchaseById(purchaseIdentifier);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Purchase> GetPurchaseByIdAsync(string purchaseIdentifier) {
            return base.Channel.GetPurchaseByIdAsync(purchaseIdentifier);
        }
        
        public LibrettoWCF.BookstoreService.Response AddPurchase(LibrettoWCF.BookstoreService.OrderTemplate purchaseForm) {
            return base.Channel.AddPurchase(purchaseForm);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> AddPurchaseAsync(LibrettoWCF.BookstoreService.OrderTemplate purchaseForm) {
            return base.Channel.AddPurchaseAsync(purchaseForm);
        }
        
        public LibrettoWCF.BookstoreService.Response DeletePurchase(LibrettoWCF.BookstoreService.Purchase purchaseInformation) {
            return base.Channel.DeletePurchase(purchaseInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> DeletePurchaseAsync(LibrettoWCF.BookstoreService.Purchase purchaseInformation) {
            return base.Channel.DeletePurchaseAsync(purchaseInformation);
        }
        
        public LibrettoWCF.BookstoreService.Response UpdatePurchase(LibrettoWCF.BookstoreService.Purchase purchaseInformation) {
            return base.Channel.UpdatePurchase(purchaseInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> UpdatePurchaseAsync(LibrettoWCF.BookstoreService.Purchase purchaseInformation) {
            return base.Channel.UpdatePurchaseAsync(purchaseInformation);
        }
        
        public LibrettoWCF.BookstoreService.Order[] GetOrdersList() {
            return base.Channel.GetOrdersList();
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Order[]> GetOrdersListAsync() {
            return base.Channel.GetOrdersListAsync();
        }
        
        public LibrettoWCF.BookstoreService.Order GetOrderById(string orderIdentifier) {
            return base.Channel.GetOrderById(orderIdentifier);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Order> GetOrderByIdAsync(string orderIdentifier) {
            return base.Channel.GetOrderByIdAsync(orderIdentifier);
        }
        
        public LibrettoWCF.BookstoreService.Order[] GetOrdersByUser(string customerIdentifier) {
            return base.Channel.GetOrdersByUser(customerIdentifier);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Order[]> GetOrdersByUserAsync(string customerIdentifier) {
            return base.Channel.GetOrdersByUserAsync(customerIdentifier);
        }
        
        public LibrettoWCF.BookstoreService.Response AddOrder(LibrettoWCF.BookstoreService.OrderTemplate orderForm) {
            return base.Channel.AddOrder(orderForm);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> AddOrderAsync(LibrettoWCF.BookstoreService.OrderTemplate orderForm) {
            return base.Channel.AddOrderAsync(orderForm);
        }
        
        public LibrettoWCF.BookstoreService.Response DeleteOrder(LibrettoWCF.BookstoreService.Order orderInformation) {
            return base.Channel.DeleteOrder(orderInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> DeleteOrderAsync(LibrettoWCF.BookstoreService.Order orderInformation) {
            return base.Channel.DeleteOrderAsync(orderInformation);
        }
        
        public LibrettoWCF.BookstoreService.Response UpdateOrder(LibrettoWCF.BookstoreService.Order orderInformation) {
            return base.Channel.UpdateOrder(orderInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.BookstoreService.Response> UpdateOrderAsync(LibrettoWCF.BookstoreService.Order orderInformation) {
            return base.Channel.UpdateOrderAsync(orderInformation);
        }
    }
}
