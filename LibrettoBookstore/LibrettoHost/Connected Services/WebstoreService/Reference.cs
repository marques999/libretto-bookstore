//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibrettoWCF.WebstoreService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginTemplate", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class LoginTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Purchase", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class Purchase : LibrettoWCF.WebstoreService.Transaction {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(LibrettoWCF.WebstoreService.Order))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(LibrettoWCF.WebstoreService.Purchase))]
    public partial class Transaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BookId {
            get {
                return this.BookIdField;
            }
            set {
                if ((this.BookIdField.Equals(value) != true)) {
                    this.BookIdField = value;
                    this.RaisePropertyChanged("BookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookTitle {
            get {
                return this.BookTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.BookTitleField, value) != true)) {
                    this.BookTitleField = value;
                    this.RaisePropertyChanged("BookTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class Order : LibrettoWCF.WebstoreService.Transaction {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibrettoWCF.WebstoreService.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatusTimestampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibrettoWCF.WebstoreService.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatusTimestamp {
            get {
                return this.StatusTimestampField;
            }
            set {
                if ((this.StatusTimestampField.Equals(value) != true)) {
                    this.StatusTimestampField = value;
                    this.RaisePropertyChanged("StatusTimestamp");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    public enum Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingExpedition = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingDispatch = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispatchComplete = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderCancelled = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderTemplate", Namespace="http://schemas.datacontract.org/2004/07/Libretto.Model")]
    [System.SerializableAttribute()]
    public partial class OrderTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bookTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double totalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bookId {
            get {
                return this.bookIdField;
            }
            set {
                if ((object.ReferenceEquals(this.bookIdField, value) != true)) {
                    this.bookIdField = value;
                    this.RaisePropertyChanged("bookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bookTitle {
            get {
                return this.bookTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.bookTitleField, value) != true)) {
                    this.bookTitleField = value;
                    this.RaisePropertyChanged("bookTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerId {
            get {
                return this.customerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.customerIdField, value) != true)) {
                    this.customerIdField = value;
                    this.RaisePropertyChanged("customerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerName {
            get {
                return this.customerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.customerNameField, value) != true)) {
                    this.customerNameField = value;
                    this.RaisePropertyChanged("customerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double total {
            get {
                return this.totalField;
            }
            set {
                if ((this.totalField.Equals(value) != true)) {
                    this.totalField = value;
                    this.RaisePropertyChanged("total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseId", Namespace="http://schemas.datacontract.org/2004/07/LibrettoWCF")]
    [System.SerializableAttribute()]
    public partial class PurchaseId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderId", Namespace="http://schemas.datacontract.org/2004/07/LibrettoWCF")]
    [System.SerializableAttribute()]
    public partial class OrderId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebstoreService.IWebstoreService")]
    public interface IWebstoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetOptions", ReplyAction="http://tempuri.org/IWebstoreService/GetOptionsResponse")]
        string GetOptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetOptions", ReplyAction="http://tempuri.org/IWebstoreService/GetOptionsResponse")]
        System.Threading.Tasks.Task<string> GetOptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetBooksList", ReplyAction="http://tempuri.org/IWebstoreService/GetBooksListResponse")]
        LibrettoWCF.WebstoreService.Book[] GetBooksList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetBooksList", ReplyAction="http://tempuri.org/IWebstoreService/GetBooksListResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Book[]> GetBooksListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetBookById", ReplyAction="http://tempuri.org/IWebstoreService/GetBookByIdResponse")]
        LibrettoWCF.WebstoreService.Book GetBookById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetBookById", ReplyAction="http://tempuri.org/IWebstoreService/GetBookByIdResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Book> GetBookByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/AddBook", ReplyAction="http://tempuri.org/IWebstoreService/AddBookResponse")]
        LibrettoWCF.WebstoreService.Book[] AddBook(LibrettoWCF.WebstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/AddBook", ReplyAction="http://tempuri.org/IWebstoreService/AddBookResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Book[]> AddBookAsync(LibrettoWCF.WebstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/DeleteBook", ReplyAction="http://tempuri.org/IWebstoreService/DeleteBookResponse")]
        LibrettoWCF.WebstoreService.Book[] DeleteBook(LibrettoWCF.WebstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/DeleteBook", ReplyAction="http://tempuri.org/IWebstoreService/DeleteBookResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Book[]> DeleteBookAsync(LibrettoWCF.WebstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/UpdateBook", ReplyAction="http://tempuri.org/IWebstoreService/UpdateBookResponse")]
        LibrettoWCF.WebstoreService.Book[] UpdateBook(LibrettoWCF.WebstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/UpdateBook", ReplyAction="http://tempuri.org/IWebstoreService/UpdateBookResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Book[]> UpdateBookAsync(LibrettoWCF.WebstoreService.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetCustomersList", ReplyAction="http://tempuri.org/IWebstoreService/GetCustomersListResponse")]
        LibrettoWCF.WebstoreService.Customer[] GetCustomersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetCustomersList", ReplyAction="http://tempuri.org/IWebstoreService/GetCustomersListResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Customer[]> GetCustomersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetCustomerById", ReplyAction="http://tempuri.org/IWebstoreService/GetCustomerByIdResponse")]
        LibrettoWCF.WebstoreService.Customer GetCustomerById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetCustomerById", ReplyAction="http://tempuri.org/IWebstoreService/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Customer> GetCustomerByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/Login", ReplyAction="http://tempuri.org/IWebstoreService/LoginResponse")]
        LibrettoWCF.WebstoreService.Customer Login(LibrettoWCF.WebstoreService.LoginTemplate loginForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/Login", ReplyAction="http://tempuri.org/IWebstoreService/LoginResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Customer> LoginAsync(LibrettoWCF.WebstoreService.LoginTemplate loginForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/AddCustomer", ReplyAction="http://tempuri.org/IWebstoreService/AddCustomerResponse")]
        string AddCustomer(LibrettoWCF.WebstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/AddCustomer", ReplyAction="http://tempuri.org/IWebstoreService/AddCustomerResponse")]
        System.Threading.Tasks.Task<string> AddCustomerAsync(LibrettoWCF.WebstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/DeleteCustomer", ReplyAction="http://tempuri.org/IWebstoreService/DeleteCustomerResponse")]
        LibrettoWCF.WebstoreService.Customer[] DeleteCustomer(LibrettoWCF.WebstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/DeleteCustomer", ReplyAction="http://tempuri.org/IWebstoreService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Customer[]> DeleteCustomerAsync(LibrettoWCF.WebstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/UpdateCustomer", ReplyAction="http://tempuri.org/IWebstoreService/UpdateCustomerResponse")]
        LibrettoWCF.WebstoreService.Customer[] UpdateCustomer(LibrettoWCF.WebstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/UpdateCustomer", ReplyAction="http://tempuri.org/IWebstoreService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Customer[]> UpdateCustomerAsync(LibrettoWCF.WebstoreService.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetPurchasesList", ReplyAction="http://tempuri.org/IWebstoreService/GetPurchasesListResponse")]
        LibrettoWCF.WebstoreService.Purchase[] GetPurchasesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetPurchasesList", ReplyAction="http://tempuri.org/IWebstoreService/GetPurchasesListResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Purchase[]> GetPurchasesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetPurchaseById", ReplyAction="http://tempuri.org/IWebstoreService/GetPurchaseByIdResponse")]
        LibrettoWCF.WebstoreService.Purchase GetPurchaseById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetPurchaseById", ReplyAction="http://tempuri.org/IWebstoreService/GetPurchaseByIdResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Purchase> GetPurchaseByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetPurchasesByUser", ReplyAction="http://tempuri.org/IWebstoreService/GetPurchasesByUserResponse")]
        LibrettoWCF.WebstoreService.Purchase[] GetPurchasesByUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetPurchasesByUser", ReplyAction="http://tempuri.org/IWebstoreService/GetPurchasesByUserResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Purchase[]> GetPurchasesByUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/AddPurchase", ReplyAction="http://tempuri.org/IWebstoreService/AddPurchaseResponse")]
        string AddPurchase(LibrettoWCF.WebstoreService.OrderTemplate purchaseForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/AddPurchase", ReplyAction="http://tempuri.org/IWebstoreService/AddPurchaseResponse")]
        System.Threading.Tasks.Task<string> AddPurchaseAsync(LibrettoWCF.WebstoreService.OrderTemplate purchaseForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/DeletePurchase", ReplyAction="http://tempuri.org/IWebstoreService/DeletePurchaseResponse")]
        LibrettoWCF.WebstoreService.Purchase[] DeletePurchase(LibrettoWCF.WebstoreService.PurchaseId purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/DeletePurchase", ReplyAction="http://tempuri.org/IWebstoreService/DeletePurchaseResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Purchase[]> DeletePurchaseAsync(LibrettoWCF.WebstoreService.PurchaseId purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/UpdatePurchase", ReplyAction="http://tempuri.org/IWebstoreService/UpdatePurchaseResponse")]
        LibrettoWCF.WebstoreService.Purchase[] UpdatePurchase(LibrettoWCF.WebstoreService.Purchase purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/UpdatePurchase", ReplyAction="http://tempuri.org/IWebstoreService/UpdatePurchaseResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Purchase[]> UpdatePurchaseAsync(LibrettoWCF.WebstoreService.Purchase purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetOrdersList", ReplyAction="http://tempuri.org/IWebstoreService/GetOrdersListResponse")]
        LibrettoWCF.WebstoreService.Order[] GetOrdersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetOrdersList", ReplyAction="http://tempuri.org/IWebstoreService/GetOrdersListResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Order[]> GetOrdersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetOrderById", ReplyAction="http://tempuri.org/IWebstoreService/GetOrderByIdResponse")]
        LibrettoWCF.WebstoreService.Order GetOrderById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetOrderById", ReplyAction="http://tempuri.org/IWebstoreService/GetOrderByIdResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Order> GetOrderByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetOrdersByUser", ReplyAction="http://tempuri.org/IWebstoreService/GetOrdersByUserResponse")]
        LibrettoWCF.WebstoreService.Order[] GetOrdersByUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/GetOrdersByUser", ReplyAction="http://tempuri.org/IWebstoreService/GetOrdersByUserResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Order[]> GetOrdersByUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/AddOrder", ReplyAction="http://tempuri.org/IWebstoreService/AddOrderResponse")]
        string AddOrder(LibrettoWCF.WebstoreService.OrderTemplate orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/AddOrder", ReplyAction="http://tempuri.org/IWebstoreService/AddOrderResponse")]
        System.Threading.Tasks.Task<string> AddOrderAsync(LibrettoWCF.WebstoreService.OrderTemplate orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/DeleteOrder", ReplyAction="http://tempuri.org/IWebstoreService/DeleteOrderResponse")]
        LibrettoWCF.WebstoreService.Order[] DeleteOrder(LibrettoWCF.WebstoreService.OrderId orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/DeleteOrder", ReplyAction="http://tempuri.org/IWebstoreService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Order[]> DeleteOrderAsync(LibrettoWCF.WebstoreService.OrderId orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/UpdateOrder", ReplyAction="http://tempuri.org/IWebstoreService/UpdateOrderResponse")]
        LibrettoWCF.WebstoreService.Order[] UpdateOrder(LibrettoWCF.WebstoreService.Order orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebstoreService/UpdateOrder", ReplyAction="http://tempuri.org/IWebstoreService/UpdateOrderResponse")]
        System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Order[]> UpdateOrderAsync(LibrettoWCF.WebstoreService.Order orderInformation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebstoreServiceChannel : LibrettoWCF.WebstoreService.IWebstoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebstoreServiceClient : System.ServiceModel.ClientBase<LibrettoWCF.WebstoreService.IWebstoreService>, LibrettoWCF.WebstoreService.IWebstoreService {
        
        public WebstoreServiceClient() {
        }
        
        public WebstoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebstoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebstoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebstoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetOptions() {
            return base.Channel.GetOptions();
        }
        
        public System.Threading.Tasks.Task<string> GetOptionsAsync() {
            return base.Channel.GetOptionsAsync();
        }
        
        public LibrettoWCF.WebstoreService.Book[] GetBooksList() {
            return base.Channel.GetBooksList();
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Book[]> GetBooksListAsync() {
            return base.Channel.GetBooksListAsync();
        }
        
        public LibrettoWCF.WebstoreService.Book GetBookById(string id) {
            return base.Channel.GetBookById(id);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Book> GetBookByIdAsync(string id) {
            return base.Channel.GetBookByIdAsync(id);
        }
        
        public LibrettoWCF.WebstoreService.Book[] AddBook(LibrettoWCF.WebstoreService.Book bookInformation) {
            return base.Channel.AddBook(bookInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Book[]> AddBookAsync(LibrettoWCF.WebstoreService.Book bookInformation) {
            return base.Channel.AddBookAsync(bookInformation);
        }
        
        public LibrettoWCF.WebstoreService.Book[] DeleteBook(LibrettoWCF.WebstoreService.Book bookInformation) {
            return base.Channel.DeleteBook(bookInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Book[]> DeleteBookAsync(LibrettoWCF.WebstoreService.Book bookInformation) {
            return base.Channel.DeleteBookAsync(bookInformation);
        }
        
        public LibrettoWCF.WebstoreService.Book[] UpdateBook(LibrettoWCF.WebstoreService.Book bookInformation) {
            return base.Channel.UpdateBook(bookInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Book[]> UpdateBookAsync(LibrettoWCF.WebstoreService.Book bookInformation) {
            return base.Channel.UpdateBookAsync(bookInformation);
        }
        
        public LibrettoWCF.WebstoreService.Customer[] GetCustomersList() {
            return base.Channel.GetCustomersList();
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Customer[]> GetCustomersListAsync() {
            return base.Channel.GetCustomersListAsync();
        }
        
        public LibrettoWCF.WebstoreService.Customer GetCustomerById(string id) {
            return base.Channel.GetCustomerById(id);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Customer> GetCustomerByIdAsync(string id) {
            return base.Channel.GetCustomerByIdAsync(id);
        }
        
        public LibrettoWCF.WebstoreService.Customer Login(LibrettoWCF.WebstoreService.LoginTemplate loginForm) {
            return base.Channel.Login(loginForm);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Customer> LoginAsync(LibrettoWCF.WebstoreService.LoginTemplate loginForm) {
            return base.Channel.LoginAsync(loginForm);
        }
        
        public string AddCustomer(LibrettoWCF.WebstoreService.Customer customerInformation) {
            return base.Channel.AddCustomer(customerInformation);
        }
        
        public System.Threading.Tasks.Task<string> AddCustomerAsync(LibrettoWCF.WebstoreService.Customer customerInformation) {
            return base.Channel.AddCustomerAsync(customerInformation);
        }
        
        public LibrettoWCF.WebstoreService.Customer[] DeleteCustomer(LibrettoWCF.WebstoreService.Customer customerInformation) {
            return base.Channel.DeleteCustomer(customerInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Customer[]> DeleteCustomerAsync(LibrettoWCF.WebstoreService.Customer customerInformation) {
            return base.Channel.DeleteCustomerAsync(customerInformation);
        }
        
        public LibrettoWCF.WebstoreService.Customer[] UpdateCustomer(LibrettoWCF.WebstoreService.Customer customerInformation) {
            return base.Channel.UpdateCustomer(customerInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Customer[]> UpdateCustomerAsync(LibrettoWCF.WebstoreService.Customer customerInformation) {
            return base.Channel.UpdateCustomerAsync(customerInformation);
        }
        
        public LibrettoWCF.WebstoreService.Purchase[] GetPurchasesList() {
            return base.Channel.GetPurchasesList();
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Purchase[]> GetPurchasesListAsync() {
            return base.Channel.GetPurchasesListAsync();
        }
        
        public LibrettoWCF.WebstoreService.Purchase GetPurchaseById(string id) {
            return base.Channel.GetPurchaseById(id);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Purchase> GetPurchaseByIdAsync(string id) {
            return base.Channel.GetPurchaseByIdAsync(id);
        }
        
        public LibrettoWCF.WebstoreService.Purchase[] GetPurchasesByUser(string id) {
            return base.Channel.GetPurchasesByUser(id);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Purchase[]> GetPurchasesByUserAsync(string id) {
            return base.Channel.GetPurchasesByUserAsync(id);
        }
        
        public string AddPurchase(LibrettoWCF.WebstoreService.OrderTemplate purchaseForm) {
            return base.Channel.AddPurchase(purchaseForm);
        }
        
        public System.Threading.Tasks.Task<string> AddPurchaseAsync(LibrettoWCF.WebstoreService.OrderTemplate purchaseForm) {
            return base.Channel.AddPurchaseAsync(purchaseForm);
        }
        
        public LibrettoWCF.WebstoreService.Purchase[] DeletePurchase(LibrettoWCF.WebstoreService.PurchaseId purchaseInformation) {
            return base.Channel.DeletePurchase(purchaseInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Purchase[]> DeletePurchaseAsync(LibrettoWCF.WebstoreService.PurchaseId purchaseInformation) {
            return base.Channel.DeletePurchaseAsync(purchaseInformation);
        }
        
        public LibrettoWCF.WebstoreService.Purchase[] UpdatePurchase(LibrettoWCF.WebstoreService.Purchase purchaseInformation) {
            return base.Channel.UpdatePurchase(purchaseInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Purchase[]> UpdatePurchaseAsync(LibrettoWCF.WebstoreService.Purchase purchaseInformation) {
            return base.Channel.UpdatePurchaseAsync(purchaseInformation);
        }
        
        public LibrettoWCF.WebstoreService.Order[] GetOrdersList() {
            return base.Channel.GetOrdersList();
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Order[]> GetOrdersListAsync() {
            return base.Channel.GetOrdersListAsync();
        }
        
        public LibrettoWCF.WebstoreService.Order GetOrderById(string id) {
            return base.Channel.GetOrderById(id);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Order> GetOrderByIdAsync(string id) {
            return base.Channel.GetOrderByIdAsync(id);
        }
        
        public LibrettoWCF.WebstoreService.Order[] GetOrdersByUser(string id) {
            return base.Channel.GetOrdersByUser(id);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Order[]> GetOrdersByUserAsync(string id) {
            return base.Channel.GetOrdersByUserAsync(id);
        }
        
        public string AddOrder(LibrettoWCF.WebstoreService.OrderTemplate orderInformation) {
            return base.Channel.AddOrder(orderInformation);
        }
        
        public System.Threading.Tasks.Task<string> AddOrderAsync(LibrettoWCF.WebstoreService.OrderTemplate orderInformation) {
            return base.Channel.AddOrderAsync(orderInformation);
        }
        
        public LibrettoWCF.WebstoreService.Order[] DeleteOrder(LibrettoWCF.WebstoreService.OrderId orderInformation) {
            return base.Channel.DeleteOrder(orderInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Order[]> DeleteOrderAsync(LibrettoWCF.WebstoreService.OrderId orderInformation) {
            return base.Channel.DeleteOrderAsync(orderInformation);
        }
        
        public LibrettoWCF.WebstoreService.Order[] UpdateOrder(LibrettoWCF.WebstoreService.Order orderInformation) {
            return base.Channel.UpdateOrder(orderInformation);
        }
        
        public System.Threading.Tasks.Task<LibrettoWCF.WebstoreService.Order[]> UpdateOrderAsync(LibrettoWCF.WebstoreService.Order orderInformation) {
            return base.Channel.UpdateOrderAsync(orderInformation);
        }
    }
}
