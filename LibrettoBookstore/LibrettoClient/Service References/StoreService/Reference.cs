//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Libretto.StoreService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StoreService.IStoreService")]
    public interface IStoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetBooksList", ReplyAction="http://tempuri.org/IStoreService/GetBooksListResponse")]
        System.Collections.Generic.List<Libretto.Model.Book> GetBooksList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetBooksList", ReplyAction="http://tempuri.org/IStoreService/GetBooksListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Book>> GetBooksListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetBookById", ReplyAction="http://tempuri.org/IStoreService/GetBookByIdResponse")]
        Libretto.Model.Book GetBookById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetBookById", ReplyAction="http://tempuri.org/IStoreService/GetBookByIdResponse")]
        System.Threading.Tasks.Task<Libretto.Model.Book> GetBookByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddBook", ReplyAction="http://tempuri.org/IStoreService/AddBookResponse")]
        System.Collections.Generic.List<Libretto.Model.Book> AddBook(Libretto.Model.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddBook", ReplyAction="http://tempuri.org/IStoreService/AddBookResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Book>> AddBookAsync(Libretto.Model.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteBook", ReplyAction="http://tempuri.org/IStoreService/DeleteBookResponse")]
        System.Collections.Generic.List<Libretto.Model.Book> DeleteBook(Libretto.Model.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteBook", ReplyAction="http://tempuri.org/IStoreService/DeleteBookResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Book>> DeleteBookAsync(Libretto.Model.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateBook", ReplyAction="http://tempuri.org/IStoreService/UpdateBookResponse")]
        System.Collections.Generic.List<Libretto.Model.Book> UpdateBook(Libretto.Model.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateBook", ReplyAction="http://tempuri.org/IStoreService/UpdateBookResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Book>> UpdateBookAsync(Libretto.Model.Book bookInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetCustomersList", ReplyAction="http://tempuri.org/IStoreService/GetCustomersListResponse")]
        System.Collections.Generic.List<Libretto.Model.Customer> GetCustomersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetCustomersList", ReplyAction="http://tempuri.org/IStoreService/GetCustomersListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Customer>> GetCustomersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetCustomerById", ReplyAction="http://tempuri.org/IStoreService/GetCustomerByIdResponse")]
        Libretto.Model.Customer GetCustomerById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetCustomerById", ReplyAction="http://tempuri.org/IStoreService/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<Libretto.Model.Customer> GetCustomerByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/Login", ReplyAction="http://tempuri.org/IStoreService/LoginResponse")]
        Libretto.Model.Clerk Login(LibrettoWCF.Model.LoginForm loginForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/Login", ReplyAction="http://tempuri.org/IStoreService/LoginResponse")]
        System.Threading.Tasks.Task<Libretto.Model.Clerk> LoginAsync(LibrettoWCF.Model.LoginForm loginForm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddCustomer", ReplyAction="http://tempuri.org/IStoreService/AddCustomerResponse")]
        string AddCustomer(Libretto.Model.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddCustomer", ReplyAction="http://tempuri.org/IStoreService/AddCustomerResponse")]
        System.Threading.Tasks.Task<string> AddCustomerAsync(Libretto.Model.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteCustomer", ReplyAction="http://tempuri.org/IStoreService/DeleteCustomerResponse")]
        System.Collections.Generic.List<Libretto.Model.Customer> DeleteCustomer(Libretto.Model.Customer customerInfromation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteCustomer", ReplyAction="http://tempuri.org/IStoreService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Customer>> DeleteCustomerAsync(Libretto.Model.Customer customerInfromation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateCustomer", ReplyAction="http://tempuri.org/IStoreService/UpdateCustomerResponse")]
        System.Collections.Generic.List<Libretto.Model.Customer> UpdateCustomer(Libretto.Model.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateCustomer", ReplyAction="http://tempuri.org/IStoreService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Customer>> UpdateCustomerAsync(Libretto.Model.Customer customerInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetPurchasesList", ReplyAction="http://tempuri.org/IStoreService/GetPurchasesListResponse")]
        System.Collections.Generic.List<Libretto.Model.Purchase> GetPurchasesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetPurchasesList", ReplyAction="http://tempuri.org/IStoreService/GetPurchasesListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Purchase>> GetPurchasesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetPurchaseById", ReplyAction="http://tempuri.org/IStoreService/GetPurchaseByIdResponse")]
        Libretto.Model.Purchase GetPurchaseById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetPurchaseById", ReplyAction="http://tempuri.org/IStoreService/GetPurchaseByIdResponse")]
        System.Threading.Tasks.Task<Libretto.Model.Purchase> GetPurchaseByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddPurchase", ReplyAction="http://tempuri.org/IStoreService/AddPurchaseResponse")]
        string AddPurchase(Libretto.Model.PurchaseTemplate purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddPurchase", ReplyAction="http://tempuri.org/IStoreService/AddPurchaseResponse")]
        System.Threading.Tasks.Task<string> AddPurchaseAsync(Libretto.Model.PurchaseTemplate purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeletePurchase", ReplyAction="http://tempuri.org/IStoreService/DeletePurchaseResponse")]
        System.Collections.Generic.List<Libretto.Model.Purchase> DeletePurchase(Libretto.Model.Purchase purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeletePurchase", ReplyAction="http://tempuri.org/IStoreService/DeletePurchaseResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Purchase>> DeletePurchaseAsync(Libretto.Model.Purchase purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdatePurchase", ReplyAction="http://tempuri.org/IStoreService/UpdatePurchaseResponse")]
        System.Collections.Generic.List<Libretto.Model.Purchase> UpdatePurchase(Libretto.Model.Purchase purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdatePurchase", ReplyAction="http://tempuri.org/IStoreService/UpdatePurchaseResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Purchase>> UpdatePurchaseAsync(Libretto.Model.Purchase purchaseInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrdersList", ReplyAction="http://tempuri.org/IStoreService/GetOrdersListResponse")]
        System.Collections.Generic.List<Libretto.Model.Order> GetOrdersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrdersList", ReplyAction="http://tempuri.org/IStoreService/GetOrdersListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Order>> GetOrdersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrderById", ReplyAction="http://tempuri.org/IStoreService/GetOrderByIdResponse")]
        Libretto.Model.Order GetOrderById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrderById", ReplyAction="http://tempuri.org/IStoreService/GetOrderByIdResponse")]
        System.Threading.Tasks.Task<Libretto.Model.Order> GetOrderByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrdersByUser", ReplyAction="http://tempuri.org/IStoreService/GetOrdersByUserResponse")]
        System.Collections.Generic.List<Libretto.Model.Order> GetOrdersByUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetOrdersByUser", ReplyAction="http://tempuri.org/IStoreService/GetOrdersByUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Order>> GetOrdersByUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddOrder", ReplyAction="http://tempuri.org/IStoreService/AddOrderResponse")]
        string AddOrder(Libretto.Model.OrderForm orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/AddOrder", ReplyAction="http://tempuri.org/IStoreService/AddOrderResponse")]
        System.Threading.Tasks.Task<string> AddOrderAsync(Libretto.Model.OrderForm orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteOrder", ReplyAction="http://tempuri.org/IStoreService/DeleteOrderResponse")]
        System.Collections.Generic.List<Libretto.Model.Order> DeleteOrder(LibrettoWCF.OrderId orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/DeleteOrder", ReplyAction="http://tempuri.org/IStoreService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Order>> DeleteOrderAsync(LibrettoWCF.OrderId orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateOrder", ReplyAction="http://tempuri.org/IStoreService/UpdateOrderResponse")]
        System.Collections.Generic.List<Libretto.Model.Order> UpdateOrder(Libretto.Model.Order orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/UpdateOrder", ReplyAction="http://tempuri.org/IStoreService/UpdateOrderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Order>> UpdateOrderAsync(Libretto.Model.Order orderInformation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStoreServiceChannel : Libretto.StoreService.IStoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StoreServiceClient : System.ServiceModel.ClientBase<Libretto.StoreService.IStoreService>, Libretto.StoreService.IStoreService {
        
        public StoreServiceClient() {
        }
        
        public StoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Libretto.Model.Book> GetBooksList() {
            return base.Channel.GetBooksList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Book>> GetBooksListAsync() {
            return base.Channel.GetBooksListAsync();
        }
        
        public Libretto.Model.Book GetBookById(string id) {
            return base.Channel.GetBookById(id);
        }
        
        public System.Threading.Tasks.Task<Libretto.Model.Book> GetBookByIdAsync(string id) {
            return base.Channel.GetBookByIdAsync(id);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Book> AddBook(Libretto.Model.Book bookInformation) {
            return base.Channel.AddBook(bookInformation);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Book>> AddBookAsync(Libretto.Model.Book bookInformation) {
            return base.Channel.AddBookAsync(bookInformation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Book> DeleteBook(Libretto.Model.Book bookInformation) {
            return base.Channel.DeleteBook(bookInformation);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Book>> DeleteBookAsync(Libretto.Model.Book bookInformation) {
            return base.Channel.DeleteBookAsync(bookInformation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Book> UpdateBook(Libretto.Model.Book bookInformation) {
            return base.Channel.UpdateBook(bookInformation);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Book>> UpdateBookAsync(Libretto.Model.Book bookInformation) {
            return base.Channel.UpdateBookAsync(bookInformation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Customer> GetCustomersList() {
            return base.Channel.GetCustomersList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Customer>> GetCustomersListAsync() {
            return base.Channel.GetCustomersListAsync();
        }
        
        public Libretto.Model.Customer GetCustomerById(string id) {
            return base.Channel.GetCustomerById(id);
        }
        
        public System.Threading.Tasks.Task<Libretto.Model.Customer> GetCustomerByIdAsync(string id) {
            return base.Channel.GetCustomerByIdAsync(id);
        }
        
        public Libretto.Model.Clerk Login(LibrettoWCF.Model.LoginForm loginForm) {
            return base.Channel.Login(loginForm);
        }
        
        public System.Threading.Tasks.Task<Libretto.Model.Clerk> LoginAsync(LibrettoWCF.Model.LoginForm loginForm) {
            return base.Channel.LoginAsync(loginForm);
        }
        
        public string AddCustomer(Libretto.Model.Customer customerInformation) {
            return base.Channel.AddCustomer(customerInformation);
        }
        
        public System.Threading.Tasks.Task<string> AddCustomerAsync(Libretto.Model.Customer customerInformation) {
            return base.Channel.AddCustomerAsync(customerInformation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Customer> DeleteCustomer(Libretto.Model.Customer customerInfromation) {
            return base.Channel.DeleteCustomer(customerInfromation);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Customer>> DeleteCustomerAsync(Libretto.Model.Customer customerInfromation) {
            return base.Channel.DeleteCustomerAsync(customerInfromation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Customer> UpdateCustomer(Libretto.Model.Customer customerInformation) {
            return base.Channel.UpdateCustomer(customerInformation);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Customer>> UpdateCustomerAsync(Libretto.Model.Customer customerInformation) {
            return base.Channel.UpdateCustomerAsync(customerInformation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Purchase> GetPurchasesList() {
            return base.Channel.GetPurchasesList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Purchase>> GetPurchasesListAsync() {
            return base.Channel.GetPurchasesListAsync();
        }
        
        public Libretto.Model.Purchase GetPurchaseById(string id) {
            return base.Channel.GetPurchaseById(id);
        }
        
        public System.Threading.Tasks.Task<Libretto.Model.Purchase> GetPurchaseByIdAsync(string id) {
            return base.Channel.GetPurchaseByIdAsync(id);
        }
        
        public string AddPurchase(Libretto.Model.PurchaseTemplate purchaseInformation) {
            return base.Channel.AddPurchase(purchaseInformation);
        }
        
        public System.Threading.Tasks.Task<string> AddPurchaseAsync(Libretto.Model.PurchaseTemplate purchaseInformation) {
            return base.Channel.AddPurchaseAsync(purchaseInformation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Purchase> DeletePurchase(Libretto.Model.Purchase purchaseInformation) {
            return base.Channel.DeletePurchase(purchaseInformation);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Purchase>> DeletePurchaseAsync(Libretto.Model.Purchase purchaseInformation) {
            return base.Channel.DeletePurchaseAsync(purchaseInformation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Purchase> UpdatePurchase(Libretto.Model.Purchase purchaseInformation) {
            return base.Channel.UpdatePurchase(purchaseInformation);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Purchase>> UpdatePurchaseAsync(Libretto.Model.Purchase purchaseInformation) {
            return base.Channel.UpdatePurchaseAsync(purchaseInformation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Order> GetOrdersList() {
            return base.Channel.GetOrdersList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Order>> GetOrdersListAsync() {
            return base.Channel.GetOrdersListAsync();
        }
        
        public Libretto.Model.Order GetOrderById(string id) {
            return base.Channel.GetOrderById(id);
        }
        
        public System.Threading.Tasks.Task<Libretto.Model.Order> GetOrderByIdAsync(string id) {
            return base.Channel.GetOrderByIdAsync(id);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Order> GetOrdersByUser(string id) {
            return base.Channel.GetOrdersByUser(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Order>> GetOrdersByUserAsync(string id) {
            return base.Channel.GetOrdersByUserAsync(id);
        }
        
        public string AddOrder(Libretto.Model.OrderForm orderInformation) {
            return base.Channel.AddOrder(orderInformation);
        }
        
        public System.Threading.Tasks.Task<string> AddOrderAsync(Libretto.Model.OrderForm orderInformation) {
            return base.Channel.AddOrderAsync(orderInformation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Order> DeleteOrder(LibrettoWCF.OrderId orderInformation) {
            return base.Channel.DeleteOrder(orderInformation);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Order>> DeleteOrderAsync(LibrettoWCF.OrderId orderInformation) {
            return base.Channel.DeleteOrderAsync(orderInformation);
        }
        
        public System.Collections.Generic.List<Libretto.Model.Order> UpdateOrder(Libretto.Model.Order orderInformation) {
            return base.Channel.UpdateOrder(orderInformation);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Libretto.Model.Order>> UpdateOrderAsync(Libretto.Model.Order orderInformation) {
            return base.Channel.UpdateOrderAsync(orderInformation);
        }
    }
}
